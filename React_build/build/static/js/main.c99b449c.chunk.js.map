{"version":3,"sources":["context/context.js","context/search_MovieInfo_context.js","Componetns/Movie.js","Componetns/Header/Header.js","Componetns/Navbar/Navbar.js","Componetns/WatchList/WatchListMovie.js","Componetns/WatchList/WatchList.js","Componetns/MovieInfo/MovieInfo.js","Componetns/Searchbar/Searchbar.js","Componetns/Pagination/Pagination.js","Componetns/Spinner/Spinner.js","Componetns/SearchResult/SearchResult.js","Componetns/Main.js","Componetns/User/Register.js","Componetns/User/Login.js","App.js","index.js"],"names":["Context","React","createContext","Provider","props","useState","isLogedIn","login","isLoading","setIsLoading","recommendedMovies","updateRecommendedMovies","watchListRef","updateWatchListRef","userSection","updateUserSectionRef","loginRef","updateLoginRef","registerRef","updateRegisterRef","currentMovie","changeCurrentMovie","watchListMovies","updateWatchList","logo","no_result","images","updateImages","baseUrl","changeUrl","value","url","token","JSON","parse","localStorage","getItem","fetch","method","headers","Authorization","then","response","json","data","resetWatchList","recommendedMovie","updateRecommended","movieInfo","id","result","children","movieInfoContext","searchQuery","current_page","total_pages","movies","searchResultState","updateSearch","loading","setLoading","movieInfoSectionRef","setMovieInfoRef","searchResult","updateSearchResult","searchResultSectionRef","setSearchResultRef","showMovieInfoSection","classList","remove","add","showSeachResultSection","Movie","ctx","useContext","ctxMovieInfo","className","href","imdb_id","onClick","e","preventDefault","movie","current","scrollIntoView","image_url","length","src","alt","name","image","genre","imdb_rating","Header","map","item","Navbar","error","message","setError","class","toggle","sendLogout","a","status","removeItem","prev","WatchListMovie","WatchList","addedToWatchList","useRef","useEffect","ref","MovieInfo","movieInfoRef","ok","exist","forEach","changeStyleOfBookmarkBtn","run_time","type","released_date","language","summary","actors","target","rel","Searchbar","context_","onSubmit","event","search","currentPage","totalPages","htmlFor","placeholder","Pagination","changePage","dataset","pageNum","prevData","hasPrePage","results","three_pages_pre","three_pages_next","push","pages","hasNextPage","Spinner","SearchResult","searchResultRef","Fragment","Main","Register","messages","username","updateUsername","email","updateEmail","first_name","updateFirstName","last_name","updateLastName","password1","updatePassword1","password2","updatePassword2","showLogin","resetFields","sendRegister","body","stringify","password","jsonData","Object","values","setItem","onChange","required","Login","setUsername","setPassword","axios","catch","toJSON","sendLogin","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c99b449c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\nexport const Provider = (props) => {\r\n    const [isLogedIn, login] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [recommendedMovies, updateRecommendedMovies] = useState([]);\r\n    const [watchListRef, updateWatchListRef] = useState(null);\r\n    const [userSection, updateUserSectionRef] = useState(null);\r\n    const [loginRef, updateLoginRef] = useState(null);\r\n    const [registerRef, updateRegisterRef] = useState(null);\r\n    const [currentMovie, changeCurrentMovie] = useState({});\r\n    const [watchListMovies, updateWatchList] = useState([]);\r\n    const [images, updateImages] = useState({\r\n        logo: \"https://moviefinder00.herokuapp.com/static/logo.png\",\r\n        no_result: \"https://moviefinder00.herokuapp.com/static/no_result.png\",\r\n    });\r\n    const [baseUrl, changeUrl] = useState(\r\n        \"https://moviefinder00.herokuapp.com\"\r\n        // \"http://127.0.0.1:8000\"\r\n    );\r\n\r\n    const updateRecommended = () => {\r\n        const url = `${baseUrl}/recommend/`;\r\n        let result = fetch(url);\r\n        result.then((response) => {\r\n            response.json().then((data) => {\r\n                updateRecommendedMovies(data);\r\n            });\r\n        });\r\n    };\r\n\r\n    const resetWatchList = () => {\r\n        updateWatchList([]);\r\n    };\r\n\r\n    const updateWatchListMovies = () => {\r\n        const url = `${baseUrl}/user/watchList`;\r\n        const token = JSON.parse(localStorage.getItem(\"findMovieToken\"));\r\n        let result = fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Token ${token}`,\r\n            },\r\n        });\r\n        result.then((response) => {\r\n            response.json().then((data) => {\r\n                updateWatchList(data);\r\n            });\r\n        });\r\n    };\r\n\r\n    const getCurrentMovie = (id) => {\r\n        const url = `${baseUrl}/movie/${id}`;\r\n        let result = fetch(url, {});\r\n        result.then((response) => {\r\n            response.json().then((data) => {\r\n                changeCurrentMovie(data.result);\r\n            });\r\n        });\r\n    };\r\n\r\n    let value = {\r\n        isLogedIn: [isLogedIn, login],\r\n        watchListRef: watchListRef,\r\n        updateWatchListRef: updateWatchListRef,\r\n        userSection: [userSection, updateUserSectionRef],\r\n        loginRef: [loginRef, updateLoginRef],\r\n        registerRef: [registerRef, updateRegisterRef],\r\n        watchListMovies: [watchListMovies, updateWatchListMovies],\r\n        resetWatchList: resetWatchList,\r\n        recommendedMovie: recommendedMovies,\r\n        updateRecommended: updateRecommended,\r\n        movieInfo: currentMovie,\r\n        changeCurrentMovie: getCurrentMovie,\r\n        isLoading: isLoading,\r\n        setIsLoading: setIsLoading,\r\n        images: [images, updateImages],\r\n        url: [baseUrl, changeUrl],\r\n    };\r\n\r\n    return <Context.Provider value={value}>{props.children}</Context.Provider>;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst movieInfoContext = React.createContext();\r\n\r\nexport default movieInfoContext;\r\n\r\nexport const Provider = (props) => {\r\n    const [searchResultState, updateSearch] = useState({\r\n        searchQuery: \"\",\r\n        current_page: 1,\r\n        total_pages: 0,\r\n        movies: [],\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [movieInfoSectionRef, setMovieInfoRef] = useState(null);\r\n    const [searchResultSectionRef, setSearchResultRef] = useState(null);\r\n    const showMovieInfoSection = (movieInfo, searchResult) => {\r\n        movieInfo.classList.remove(\"hide\");\r\n        searchResult.classList.add(\"hide\");\r\n    };\r\n\r\n    const showSeachResultSection = (movieInfo, searchResult) => {\r\n        movieInfo.classList.add(\"hide\");\r\n        searchResult.classList.remove(\"hide\");\r\n    };\r\n\r\n    let value = {\r\n        loading: [loading, setLoading],\r\n        searchResult: searchResultState,\r\n        updateSearchResult: updateSearch,\r\n        movieInfoSectionRef: movieInfoSectionRef,\r\n        setMovieInfoRef: setMovieInfoRef,\r\n        searchResultSectionRef: searchResultSectionRef,\r\n        setSearchResultRef: setSearchResultRef,\r\n        showMovieInfoSection: showMovieInfoSection,\r\n        showSeachResultSection: showSeachResultSection,\r\n    };\r\n\r\n    return (\r\n        <movieInfoContext.Provider value={value}>\r\n            {props.children}\r\n        </movieInfoContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Context from \"../context/context\";\r\nimport movieInfoContext from \"../context/search_MovieInfo_context\";\r\n\r\nconst Movie = (props) => {\r\n    const ctx = useContext(Context);\r\n    const ctxMovieInfo = useContext(movieInfoContext);\r\n\r\n    const showClickedMovieInfo = (e) => {\r\n        e.preventDefault();\r\n        ctx.changeCurrentMovie(props.movie.imdb_id);\r\n        ctxMovieInfo.showMovieInfoSection(\r\n            ctxMovieInfo.movieInfoSectionRef.current,\r\n            ctxMovieInfo.searchResultSectionRef.current\r\n        );\r\n        ctxMovieInfo.movieInfoSectionRef.current.scrollIntoView();\r\n    };\r\n\r\n    const moviesImage = () => {\r\n        if (props.movie.image_url != null) {\r\n            if (props.movie.image_url.length > 1) {\r\n                return (\r\n                    <img src={props.movie.image_url} alt={props.movie.name} />\r\n                );\r\n            }\r\n        }\r\n        return <img src={props.movie.image} alt={props.movie.name} />;\r\n    };\r\n    return (\r\n        <li className=\"item\">\r\n            <a href={`${ctx.movieInfo.imdb_id}`} onClick={showClickedMovieInfo}>\r\n                {moviesImage()}\r\n            </a>\r\n\r\n            <details>\r\n                <summary>\r\n                    <div>\r\n                        <h5>{props.movie.name}</h5>\r\n                        <p className=\"Genre\">{props.movie.genre}</p>\r\n                    </div>\r\n                    <div>\r\n                        <i className=\"fas fa-star\"></i>\r\n                        <span className=\"rating\">\r\n                            {props.movie.imdb_rating}\r\n                        </span>\r\n                    </div>\r\n                </summary>\r\n            </details>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useContext } from \"react\";\r\nimport Context from \"../../context/context\";\r\nimport Movie from \"../Movie\";\r\n\r\nconst Header = () => {\r\n    const ctx = useContext(Context);\r\n    const generateMoviesList = () => {\r\n        return ctx.recommendedMovie.map((item) => {\r\n            return <Movie movie={item} key={item.imdb_id} />;\r\n        });\r\n    };\r\n    return (\r\n        <header>\r\n            <section id=\"recommendedMovies\">\r\n                <h3 className=\"title\">Recommended Movies</h3>\r\n                <ul className=\"MS-content\" id=\"recommendedMoviesContainer\">\r\n                    {generateMoviesList()}\r\n                </ul>\r\n                <div className=\"MS-controls\">\r\n                    <button className=\"MS-left\">\r\n                        <i\r\n                            className=\"fas fa-chevron-left fa-3x\"\r\n                            aria-hidden=\"true\"\r\n                        ></i>\r\n                    </button>\r\n                    <button className=\"MS-right\">\r\n                        <i\r\n                            className=\"fas fa-chevron-right fa-3x\"\r\n                            aria-hidden=\"true\"\r\n                        ></i>\r\n                    </button>\r\n                </div>\r\n            </section>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Context from \"../../context/context\";\r\n\r\nconst Navbar = () => {\r\n    const ctx = useContext(Context);\r\n    const [error, setError] = useState({\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n    const toggleBookmarks = () => {\r\n        ctx.watchListRef.current.classList.toggle(\"bookmarksHidden\");\r\n    };\r\n\r\n    const toggleLogin = () => {\r\n        ctx.userSection[0].current.classList.remove(\"hide\");\r\n    };\r\n\r\n    const toggleLogout = () => {\r\n        const url = `${ctx.url[0]}/user/logout`;\r\n        const sendLogout = async (url) => {\r\n            const token = JSON.parse(localStorage.getItem(\"findMovieToken\"));\r\n            let response = await fetch(url, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Token ${token}`,\r\n                },\r\n            });\r\n            const jsonResponse = await response.json();\r\n            if (jsonResponse.status === 200) {\r\n                localStorage.removeItem(\"findMovieToken\");\r\n                ctx.isLogedIn[1](false);\r\n                ctx.userSection[0].current.classList.add(\"hide\");\r\n                ctx.resetWatchList();\r\n            } else {\r\n                setError((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        error: true,\r\n                        message: \"The logut was not successful!\",\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        sendLogout(url);\r\n    };\r\n    return (\r\n        <nav>\r\n            <figure className=\"logo\">\r\n                <a href=\"/\">\r\n                    <img src={ctx.images[0].logo} alt=\"Movie Finder\" />\r\n                </a>\r\n            </figure>\r\n            <div>\r\n                {error.error && (\r\n                    <div class=\"error\">\r\n                        <p class=\"error_message\">* {error.message}</p>\r\n                    </div>\r\n                )}\r\n\r\n                {ctx.isLogedIn[0] && (\r\n                    <button id=\"showBookmarksButton\" onClick={toggleBookmarks}>\r\n                        <i className=\"fas fa-bookmark fa-2x\"></i>\r\n                    </button>\r\n                )}\r\n                {!ctx.isLogedIn[0] && (\r\n                    <button className=\"btn\" onClick={toggleLogin}>\r\n                        Login\r\n                    </button>\r\n                )}\r\n                {ctx.isLogedIn[0] && (\r\n                    <button className=\"btn\" onClick={toggleLogout}>\r\n                        Logout\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from \"react\";\r\nimport Context from \"../../context/context\";\r\nimport movieInfoContext from \"../../context/search_MovieInfo_context\";\r\n\r\nconst WatchListMovie = (props) => {\r\n    const ctx = useContext(Context);\r\n    const ctxMovieInfo = useContext(movieInfoContext);\r\n    const showClickedMovieInfo = () => {\r\n        ctx.changeCurrentMovie(props.movie.imdb_id);\r\n        ctxMovieInfo.showMovieInfoSection(\r\n            ctxMovieInfo.movieInfoSectionRef.current,\r\n            ctxMovieInfo.searchResultSectionRef.current\r\n        );\r\n        ctxMovieInfo.movieInfoSectionRef.current.scrollIntoView();\r\n    };\r\n    const moviesImage = () => {\r\n        if (props.movie.image_url != null) {\r\n            if (props.movie.image_url.length > 1) {\r\n                return (\r\n                    <img src={props.movie.image_url} alt={props.movie.name} />\r\n                );\r\n            }\r\n        }\r\n        return <img src={props.movie.image} alt={props.movie.name} />;\r\n    };\r\n\r\n    return (\r\n        <li className=\"bookmark\" onClick={showClickedMovieInfo}>\r\n            <a href={`/#${ctx.movieInfo.imdb_id}`}>\r\n                {moviesImage()}\r\n                <div>\r\n                    <h5>{props.movie.name}</h5>\r\n                    <i className=\"fas fa-star\"></i>\r\n                    <span className=\"rating\">{props.movie.imdb_rating}</span>\r\n                </div>\r\n            </a>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default WatchListMovie;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport Context from \"../../context/context\";\r\nimport WatchListMovie from \"./WatchListMovie\";\r\n\r\nconst WatchList = () => {\r\n    const ctx = useContext(Context);\r\n    const addedToWatchList = useRef();\r\n    useEffect(() => {\r\n        ctx.updateWatchListRef(addedToWatchList);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const watchListMovies = () => {\r\n        return ctx.watchListMovies[0].map((movie) => {\r\n            return <WatchListMovie movie={movie} key={movie.imdb_id} />;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section className=\"bookmarksContainer\">\r\n            <div ref={addedToWatchList} className=\"bookmarks bookmarksHidden\">\r\n                <h4 className=\"bookmarkTitle\">Watch List</h4>\r\n                <ul id=\"bookmarksList\">{watchListMovies()}</ul>\r\n                {ctx.watchListMovies[0].length === 0 ? (\r\n                    <h3 className=\"emptyBookmark\">You have no bookmark</h3>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <div className=\"Line\"></div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default WatchList;\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport movieInfoContext from \"../../context/search_MovieInfo_context\";\r\nimport Context from \"../../context/context\";\r\n\r\nconst MovieInfo = () => {\r\n    const ctxMovieInfo = useContext(movieInfoContext);\r\n    const ctx = useContext(Context);\r\n    const movieInfoRef = useRef();\r\n    const showSeachResultSection = () => {\r\n        ctxMovieInfo.showSeachResultSection(\r\n            ctxMovieInfo.movieInfoSectionRef.current,\r\n            ctxMovieInfo.searchResultSectionRef.current\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        ctxMovieInfo.setMovieInfoRef(movieInfoRef);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const addToWatchList = () => {\r\n        const url = `${ctx.url[0]}/user/watchList/add/${ctx.movieInfo.imdb_id}`;\r\n        const token = JSON.parse(localStorage.getItem(\"findMovieToken\"));\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: `Token ${token}`,\r\n            },\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                ctx.watchListMovies[1]();\r\n            }\r\n        });\r\n    };\r\n\r\n    const changeStyleOfBookmarkBtn = () => {\r\n        let exist = false;\r\n        ctx.watchListMovies[0].forEach((movie) => {\r\n            if (movie.imdb_id === ctx.movieInfo.imdb_id) {\r\n                exist = true;\r\n            }\r\n        });\r\n        if (exist) {\r\n            return <i className=\"fas fa-bookmark fa-2x\"></i>;\r\n        }\r\n        return <i className=\"far fa-bookmark fa-2x\"></i>;\r\n    };\r\n\r\n    const backButton = () => {\r\n        if (ctxMovieInfo.searchResult.movies.length > 0) {\r\n            return (\r\n                <button className=\"backButton\" onClick={showSeachResultSection}>\r\n                    <i className=\"fas fa-arrow-left\"></i>Search results\r\n                </button>\r\n            );\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    return (\r\n        <section className=\"MovieInfo hide\" id=\"moreInfo\" ref={movieInfoRef}>\r\n            <div>{backButton()}</div>\r\n            <figure>\r\n                <img\r\n                    src={\r\n                        ctx.movieInfo.image_url != null\r\n                            ? ctx.movieInfo.image_url\r\n                            : ctx.movieInfo.image\r\n                    }\r\n                    alt={ctx.movieInfo.name}\r\n                />\r\n            </figure>\r\n            <div className=\"inforamtion\">\r\n                <div className=\"movieTitle\">\r\n                    <h3>{ctx.movieInfo.name}</h3>\r\n                    {ctx.isLogedIn[0] && (\r\n                        <button\r\n                            className=\"bookmarkButton\"\r\n                            onClick={addToWatchList}\r\n                        >\r\n                            {changeStyleOfBookmarkBtn()}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"runTime\">\r\n                    <i className=\"far fa-clock\"></i>\r\n                    <span>\r\n                        {ctx.movieInfo.run_time\r\n                            ? ctx.movieInfo.run_time + \" min\"\r\n                            : \"Not available\"}\r\n                    </span>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        Type:\r\n                        <span className=\"movieRelease infoText\">\r\n                            {ctx.movieInfo.type}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        Release:\r\n                        <span className=\"movieRelease infoText\">\r\n                            {ctx.movieInfo.released_date}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        Genre:\r\n                        <span className=\"movieGenre infoText\">\r\n                            {ctx.movieInfo.genre}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        Rating:\r\n                        <span className=\"imdbVotes infoText\">\r\n                            {ctx.movieInfo.imdb_rating}\r\n                        </span>\r\n                        <i className=\"fab fa-imdb\"></i>\r\n                    </li>\r\n                    <li>\r\n                        Language:\r\n                        <span className=\"language infoText\">\r\n                            {ctx.movieInfo.language}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        <p className=\"summary\">{ctx.movieInfo.summary}</p>\r\n                    </li>\r\n                    <li>\r\n                        imdbID:\r\n                        <span className=\"imdbID infoText\">\r\n                            {ctx.movieInfo.imdb_id}\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"actorsList\">\r\n                        <h3>Actors</h3>\r\n                        <p className=\"actors\">{ctx.movieInfo.actors}</p>\r\n                    </li>\r\n                    <a\r\n                        href={`https://www.imdb.com/title/${ctx.movieInfo.imdb_id}/`}\r\n                        className=\"redirecButton\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        See on IMDB website\r\n                        <i className=\"fas fa-share-square fa\"></i>\r\n                    </a>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MovieInfo;\r\n","import React, { useContext, useState } from \"react\";\r\nimport movieInfoContext from \"../../context/search_MovieInfo_context\";\r\nimport Context from \"../../context/context\";\r\n\r\nconst Searchbar = () => {\r\n    const ctx = useContext(movieInfoContext);\r\n    const context_ = useContext(Context);\r\n    const [error, setError] = useState(false);\r\n    const getSearchResult = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (event.target.search.value.length > 2) {\r\n            const url = `${context_.url[0]}/search/${event.target.search.value}`;\r\n            ctx.loading[1](true);\r\n            let result = fetch(url);\r\n            result.then((response) => {\r\n                response.json().then((data) => {\r\n                    ctx.updateSearchResult({\r\n                        searchQuery: event.target.search.value,\r\n                        current_page: data.currentPage,\r\n                        total_pages: data.totalPages,\r\n                        movies: data.result,\r\n                    });\r\n                    ctx.loading[1](false);\r\n                });\r\n            });\r\n            ctx.showSeachResultSection(\r\n                ctx.movieInfoSectionRef.current,\r\n                ctx.searchResultSectionRef.current\r\n            );\r\n            setError(false);\r\n            ctx.searchResultSectionRef.current.scrollIntoView();\r\n        } else {\r\n            setError(true);\r\n        }\r\n    };\r\n    return (\r\n        <section className=\"searchContainer\">\r\n            <form\r\n                method=\"POST\"\r\n                className=\"searchForm\"\r\n                onSubmit={getSearchResult}\r\n            >\r\n                {error && (\r\n                    <label htmlFor=\"search\" className=\"searchError\">\r\n                        {\" \"}\r\n                        The search query should at least be 3 charecter!\r\n                    </label>\r\n                )}\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        id=\"search\"\r\n                        className=\"search\"\r\n                        placeholder=\"Search movie ...\"\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                        <span>Search</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useContext } from \"react\";\r\nimport movieInfoContext from \"../../context/search_MovieInfo_context\";\r\nimport Context from \"../../context/context\";\r\n\r\nconst Pagination = () => {\r\n    const context_ = useContext(Context);\r\n    const ctx = useContext(movieInfoContext);\r\n\r\n    const changePage = (e) => {\r\n        let currentPage = e.target.dataset.pageNum;\r\n        const url = `${context_.url[0]}/search/${ctx.searchResult.searchQuery}/${currentPage}`;\r\n        let result = fetch(url);\r\n        result.then((response) => {\r\n            response.json().then((data) => {\r\n                ctx.updateSearchResult((prevData) => {\r\n                    return {\r\n                        ...prevData,\r\n                        current_page: data.currentPage,\r\n                        movies: data.result,\r\n                    };\r\n                });\r\n            });\r\n        });\r\n        ctx.searchResultSectionRef.current.scrollIntoView();\r\n    };\r\n\r\n    const hasNextPage = () => {\r\n        if (ctx.searchResult.current_page < ctx.searchResult.total_pages) {\r\n            return (\r\n                <li className=\"next\">\r\n                    <i\r\n                        className=\"fas fa-caret-right fa-2x\"\r\n                        onClick={changePage}\r\n                        data-page-num={ctx.searchResult.current_page + 1}\r\n                    ></i>\r\n                </li>\r\n            );\r\n        }\r\n    };\r\n\r\n    const hasPrePage = () => {\r\n        if (ctx.searchResult.current_page > 1) {\r\n            return (\r\n                <li className=\"previous\">\r\n                    <i\r\n                        className=\"fas fa-caret-left fa-2x\"\r\n                        onClick={changePage}\r\n                        data-page-num={ctx.searchResult.current_page - 1}\r\n                    ></i>\r\n                </li>\r\n            );\r\n        }\r\n    };\r\n\r\n    const pages = () => {\r\n        let results = [];\r\n\r\n        for (\r\n            let pageNum = 1;\r\n            pageNum <= ctx.searchResult.total_pages;\r\n            pageNum++\r\n        ) {\r\n            let three_pages_pre =\r\n                -3 <= pageNum - ctx.searchResult.current_page &&\r\n                pageNum - ctx.searchResult.current_page < 0 &&\r\n                pageNum >= 1;\r\n\r\n            let three_pages_next =\r\n                3 >= pageNum - ctx.searchResult.current_page &&\r\n                pageNum - ctx.searchResult.current_page > 0 &&\r\n                pageNum <= ctx.searchResult.total_pages;\r\n\r\n            if (ctx.searchResult.current_page === pageNum) {\r\n                results.push(\r\n                    <li\r\n                        className=\"activePage\"\r\n                        key={pageNum}\r\n                        onClick={changePage}\r\n                        data-page-num={pageNum}\r\n                    >\r\n                        {pageNum}\r\n                    </li>\r\n                );\r\n            } else if (three_pages_pre) {\r\n                if (pageNum - ctx.searchResult.current_page === -3) {\r\n                    results.push(\r\n                        <li\r\n                            key=\"lessPages\"\r\n                            onClick={changePage}\r\n                            data-page-num={1}\r\n                        >\r\n                            ...\r\n                        </li>\r\n                    );\r\n                }\r\n                results.push(\r\n                    <li\r\n                        key={pageNum}\r\n                        onClick={changePage}\r\n                        data-page-num={pageNum}\r\n                    >\r\n                        {pageNum}\r\n                    </li>\r\n                );\r\n            } else if (three_pages_next) {\r\n                results.push(\r\n                    <li\r\n                        key={pageNum}\r\n                        onClick={changePage}\r\n                        data-page-num={pageNum}\r\n                    >\r\n                        {pageNum}\r\n                    </li>\r\n                );\r\n                if (pageNum - ctx.searchResult.current_page === 3) {\r\n                    results.push(\r\n                        <li\r\n                            key=\"morePages\"\r\n                            onClick={changePage}\r\n                            data-page-num={ctx.searchResult.total_pages}\r\n                        >\r\n                            ...\r\n                        </li>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return results;\r\n    };\r\n\r\n    return (\r\n        <section className=\"pagination\">\r\n            <ul>\r\n                {hasPrePage()}\r\n                {pages()}\r\n                {hasNextPage()}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <section className=\"spinner\">\r\n            <div className=\"lds-default\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport movieInfoContext from \"../../context/search_MovieInfo_context\";\r\nimport Context from \"../../context/context\";\r\nimport Movie from \"../Movie\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst SearchResult = () => {\r\n    const ctx = useContext(movieInfoContext);\r\n    const context_ = useContext(Context);\r\n    const searchResultRef = useRef();\r\n\r\n    useEffect(() => {\r\n        ctx.setSearchResultRef(searchResultRef);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const generateMoviesList = () => {\r\n        if (ctx.searchResult.movies.length > 0) {\r\n            return ctx.searchResult.movies.map((item) => {\r\n                return <Movie movie={item} key={item.imdb_id} />;\r\n            });\r\n        }\r\n        return (\r\n            <figure>\r\n                <img\r\n                    src={context_.images[0].no_result}\r\n                    alt=\"no movies were found\"\r\n                />\r\n                <h4>No movie matched the search query</h4>\r\n            </figure>\r\n        );\r\n    };\r\n\r\n    const spinnerOrResult = () => {\r\n        if (ctx.loading[0]) {\r\n            return <Spinner />;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h5>\r\n                    Results of:{\" \"}\r\n                    <span className=\"searchQuery\">\r\n                        \"{ctx.searchResult.searchQuery}\"\r\n                    </span>\r\n                </h5>\r\n                <ul className=\"searchResults hidden\">{generateMoviesList()}</ul>\r\n                {ctx.searchResult.total_pages > 1 ? <Pagination /> : \"\"}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <section className=\"searchResultsSection hide\" ref={searchResultRef}>\r\n            {spinnerOrResult()}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport MovieInfo from \"./MovieInfo/MovieInfo\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\nimport SearchResult from \"./SearchResult/SearchResult\";\r\nimport Context from \"../context/context\";\r\n\r\nconst Main = () => {\r\n    const ctx = useContext(Context);\r\n\r\n    const checkForLogin = () => {\r\n        const token = JSON.parse(localStorage.getItem(\"findMovieToken\"));\r\n        if (token) {\r\n            ctx.isLogedIn[1](true);\r\n            ctx.watchListMovies[1]();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        ctx.updateRecommended();\r\n        checkForLogin();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <main>\r\n            <Searchbar />\r\n            <MovieInfo />\r\n            <SearchResult />\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport Context from \"../../context/context\";\r\n\r\nconst Register = () => {\r\n    const ctx = useContext(Context);\r\n    const [error, setError] = useState({\r\n        error: false,\r\n        messages: [],\r\n    });\r\n    const registerRef = useRef();\r\n    const [username, updateUsername] = useState(\"\");\r\n    const [email, updateEmail] = useState(\"\");\r\n    const [first_name, updateFirstName] = useState(\"\");\r\n    const [last_name, updateLastName] = useState(\"\");\r\n    const [password1, updatePassword1] = useState(\"\");\r\n    const [password2, updatePassword2] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        ctx.registerRef[1](registerRef);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const loginSectionEvent = (e) => {\r\n        ctx.userSection[0].current.classList.toggle(\"hide\");\r\n    };\r\n\r\n    const showLogin = () => {\r\n        ctx.loginRef[0].current.classList.remove(\"hide\");\r\n        ctx.registerRef[0].current.classList.add(\"hide\");\r\n    };\r\n\r\n    const setUsername = (e) => {\r\n        updateUsername(e.target.value);\r\n    };\r\n    const setFirstName = (e) => {\r\n        updateFirstName(e.target.value);\r\n    };\r\n    const setLastName = (e) => {\r\n        updateLastName(e.target.value);\r\n    };\r\n    const setPassword1 = (e) => {\r\n        updatePassword1(e.target.value);\r\n    };\r\n    const setPassword2 = (e) => {\r\n        updatePassword2(e.target.value);\r\n    };\r\n    const setEmail = (e) => {\r\n        updateEmail(e.target.value);\r\n    };\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n        const url = `${ctx.url[0]}/user/register`;\r\n        const sendRegister = async (url) => {\r\n            return fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    email: email,\r\n                    password: password1,\r\n                    password2: password2,\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                }),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }).then((response) => {\r\n                if (!response.ok) {\r\n                    response.json().then((jsonData) => {\r\n                        setError((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                error: true,\r\n                                messages: Object.values(jsonData),\r\n                            };\r\n                        });\r\n                    });\r\n                    return null;\r\n                }\r\n                return response;\r\n            });\r\n        };\r\n        const result = sendRegister(url);\r\n        result.then((data) => {\r\n            if (data) {\r\n                data.json().then((data) => {\r\n                    localStorage.setItem(\r\n                        \"findMovieToken\",\r\n                        JSON.stringify(data.token)\r\n                    );\r\n                    ctx.isLogedIn[1](true);\r\n                    ctx.userSection[0].current.classList.add(\"hide\");\r\n                    ctx.watchListMovies[1]();\r\n                    showLogin();\r\n                    resetFields();\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const resetFields = () => {\r\n        updateUsername(\"\");\r\n        updatePassword1(\"\");\r\n        updatePassword2(\"\");\r\n        updateFirstName(\"\");\r\n        updateLastName(\"\");\r\n        updateEmail(\"\");\r\n    };\r\n\r\n    const returnErrors = () => {\r\n        if (error.error) {\r\n            return error.messages.map((message) => {\r\n                return <p className=\"error_message\">* {message}</p>;\r\n            });\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"LoginForm RegisterForm hide\" ref={registerRef}>\r\n            <button id=\"closeLogin\" onClick={loginSectionEvent}>\r\n                <i className=\"fas fa-times\"></i>\r\n            </button>\r\n            <figure className=\"logo\">\r\n                <a href=\"index.html\">\r\n                    <img src={ctx.images[0].logo} alt=\"Movie Finder\" />\r\n                </a>\r\n            </figure>\r\n            <h3>Register</h3>\r\n            <form onSubmit={register}>\r\n                {returnErrors()}\r\n                <div className=\"row\">\r\n                    <input\r\n                        name=\"first_name\"\r\n                        type=\"text\"\r\n                        placeholder=\"First name\"\r\n                        value={first_name}\r\n                        onChange={setFirstName}\r\n                    />\r\n\r\n                    <input\r\n                        name=\"last_name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Last name\"\r\n                        value={last_name}\r\n                        onChange={setLastName}\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={setUsername}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <input\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={setEmail}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password1}\r\n                        onChange={setPassword1}\r\n                        required\r\n                    />\r\n                    <input\r\n                        name=\"password2\"\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat password\"\r\n                        value={password2}\r\n                        onChange={setPassword2}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn\">\r\n                    Create account\r\n                </button>\r\n                <div className=\"row\">\r\n                    <button className=\"link\" onClick={showLogin} type=\"button\">\r\n                        Have already an account?\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport Context from \"../../context/context\";\r\nimport Register from \"./Register\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n    const ctx = useContext(Context);\r\n    const loginRef = useRef();\r\n    const userSection = useRef();\r\n    const [error, setError] = useState({\r\n        error: false,\r\n        message: \"\",\r\n    });\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        ctx.loginRef[1](loginRef);\r\n        ctx.userSection[1](userSection);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const changeUsername = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const changePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n\r\n    const login = (event) => {\r\n        event.preventDefault();\r\n        const url = `${ctx.url[0]}/user/login`;\r\n        const sendLogin = (url) => {\r\n            axios({\r\n                method: \"POST\",\r\n                url: url,\r\n                data: {\r\n                    username: username,\r\n                    password: password,\r\n                },\r\n            })\r\n                .catch(function (e) {\r\n                    const err = e.toJSON();\r\n                    if (err.status === 400) {\r\n                        setError((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                error: true,\r\n                                message: \"Username or password incorrect\",\r\n                            };\r\n                        });\r\n                    } else {\r\n                        setError((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                error: true,\r\n                                message: \"Something went wrong!\",\r\n                            };\r\n                        });\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    if (response) {\r\n                        localStorage.setItem(\r\n                            \"findMovieToken\",\r\n                            JSON.stringify(response.data.token)\r\n                        );\r\n                        ctx.isLogedIn[1](true);\r\n                        ctx.userSection[0].current.classList.add(\"hide\");\r\n                        ctx.watchListMovies[1]();\r\n                        resetFields();\r\n                    }\r\n                });\r\n        };\r\n        sendLogin(url);\r\n    };\r\n    const resetFields = () => {\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const showRegister = (e) => {\r\n        ctx.loginRef[0].current.classList.add(\"hide\");\r\n        ctx.registerRef[0].current.classList.remove(\"hide\");\r\n    };\r\n\r\n    const loginSectionEvent = (e) => {\r\n        ctx.userSection[0].current.classList.toggle(\"hide\");\r\n    };\r\n\r\n    return (\r\n        <section className=\"LoginPage hide\" ref={userSection}>\r\n            <div className=\"LoginForm\" ref={loginRef}>\r\n                <button id=\"closeLogin\" onClick={loginSectionEvent}>\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n                <figure className=\"logo\">\r\n                    <a href=\"index.html\">\r\n                        <img src={ctx.images[0].logo} alt=\"Movie Finder\" />\r\n                    </a>\r\n                </figure>\r\n                <h3>Login</h3>\r\n                <form method=\"POST\" onSubmit={login}>\r\n                    {error.error && (\r\n                        <p className=\"error_message\">{error.message}</p>\r\n                    )}\r\n                    <div className=\"row\">\r\n                        <input\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            onChange={changeUsername}\r\n                            value={username}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={changePassword}\r\n                            value={password}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn\">\r\n                        {\" \"}\r\n                        Login{\" \"}\r\n                    </button>\r\n                    <div className=\"row\">\r\n                        <button\r\n                            className=\"link\"\r\n                            type=\"button\"\r\n                            onClick={showRegister}\r\n                        >\r\n                            Register\r\n                        </button>\r\n                        <a href={`${ctx.url[0]}/user/resetPassword`}>\r\n                            {\" \"}\r\n                            Forgot your password?\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <Register />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./Componetns/main.scss\";\r\nimport Header from \"./Componetns/Header/Header\";\r\nimport Navbar from \"./Componetns/Navbar/Navbar\";\r\nimport WatchList from \"./Componetns/WatchList/WatchList\";\r\nimport Main from \"./Componetns/Main\";\r\nimport Login from \"./Componetns/User/Login\";\r\nimport { Provider } from \"./context/search_MovieInfo_context\";\r\n\r\nfunction App() {\r\n    // useEffect(() => {\r\n    //     const jquery = document.createElement(\"script\");\r\n    //     jquery.src = \"jquery-3-6.min.js\";\r\n    //     jquery.async = true;\r\n    //     document.body.appendChild(jquery);\r\n    //     const multisliderFile = document.createElement(\"script\");\r\n    //     multisliderFile.src = \"multislider.min.js\";\r\n    //     multisliderFile.async = true;\r\n    //     document.body.appendChild(multisliderFile);\r\n    //     setTimeout(() => {\r\n    //         const script = document.createElement(\"script\");\r\n    //         script.src = \"script.js\";\r\n    //         script.async = true;\r\n    //         document.body.appendChild(script);\r\n    //     }, 500);\r\n    // }, []);\r\n\r\n    return (\r\n        <Provider>\r\n            <Navbar />\r\n            <Header />\r\n            <WatchList />\r\n            <Main />\r\n            <Login />\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"./context/context\";\r\n\r\nReactDOM.render(\r\n    <Provider>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}